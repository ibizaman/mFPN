#!/bin/sh

# https://wiki.archlinux.org/index.php/Wireless_Setup#Manual_setup
# https://wiki.archlinux.org/index.php/Systemd

source $(dirname "$0")/common.sh

#------------------------------------------------#
# Check type, medium and security from conf file #
#------------------------------------------------#
read_from_conf setup_wifi/setup_wifi.conf type medium interface
[ $type != "static" ] && [ $type != "dynamic" ] && error "In conf file, type must be static or dynamic"
[ $medium != "wired" ] && [ $medium != "wireless" ] && error "In conf file, medium must be wired or wireless"

if [ $medium = "wired" ]
then secure="no"
else read_from_conf setup_wifi/setup_wifi.conf secure
     [ $secure != "no" ] && [ $secure != "wpa" ] && error "In conf file, secure must be no or wpa if medium = wireless"
fi
debug "Loading $medium network with type $type and security $secure"

if [ $type = "static" ]
then read_from_conf setup_wifi/setup_wifi.conf ip_address ip_netmask ip_broadcast ip_gateway
fi

if [ $medium = "wireless" ]
then
    if [ $secure = "no" ]
    then read_from_conf setup_wifi/setup_wifi.conf essid
    elif [ $secure = "wpa" ]
    then read_from_conf setup_wifi/setup_wifi.conf essid passphrase 
         wpa_destination=/etc/wpa_supplicant/wpa_supplicant.conf
    fi

fi

network_device=$(systemctl --full | grep "$interface" | grep sys-subsystem | cut -d" " -f1)
[ -z $network_device ] && error "No Wireless device found, please plug-in your wireless USB adaptator"

if_template=setup_wifi/${type}_conf.d_network.template
if_destination=/etc/conf.d/network

if [ $type = "static" ]; then
    dns_template=setup_wifi/resolv.conf.template
    dns_destination=/etc/resolv.conf
fi

systemd_generated=setup_wifi/network.service
systemd_destination=/usr/local/lib/systemd/system/network.service

#------------------#
# stop old service #
#------------------#
stop_systemd_service network.service

#-----------------------------------------------#
# create etc/wpa_supplicant/wpa_supplicant.conf #
# strip off psk in clear format                 #
#-----------------------------------------------#
if [ $medium = "wireless" ] && [ $secure = "wpa" ]; then
    backup_file $wpa_destination

    debug "Copying passphrase to $wpa_destination"
    wpa_passphrase $essid $passphrase | grep -v "#psk" > $wpa_destination

    delete_backup_if_obsolete $wpa_destination
fi

#---------------------#
# create network file #
#---------------------#
if [ $type = "static" ]
then deploy_template $if_template $if_destination interface ip_address ip_netmask ip_broadcast ip_gateway
else deploy_template $if_template $if_destination interface 
fi

#--------------------#
# create resolv file #
#--------------------#
if [ $type = "static" ]; then
    deploy_template $dns_template $dns_destination dns_domain dns_server
fi

#---------------------------#
# create or replace service #
#---------------------------#
deploy_generated_file $systemd_generated $systemd_destination

#--------------#
# load service #
#--------------#
install_systemd_service network.service

disable_systemd_service wpa_supplicant
